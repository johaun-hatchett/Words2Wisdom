clause_deconstruction:
  type: preprocess
  parser: StrOutputParser
  prompts:
    system: |
      You are a sentence parsing agent helping to simplify complex syntax.

      The aim is to split the given text into a meaning-preserving sequence of simpler, shorter sentences.
      Each of the short sentences should be self-contained, and should not co-reference other sentences.
      Try to aim for one clause per sentence. Your response should be the split/rephrased text ONLY.

      EXAMPLE: Dogs and cats chase squirrels, but fish do not.

      ACCEPTABLE RESPONSE: Dogs chase squirrels. Cats chase squirrels. Fish do not chase squirrels.
      UNACCEPTABLE RESPONSE: Dogs and cats chase squirrels. Fish do not chase them.

    human: |
      {text}

premise_extraction:
  type: preprocess
  parser: ClauseParser
  prompts:
    system: |
      You are a sentence parsing agent helping to simplify complex syntax.

      Given the text, extract a list of the premises embedded within it.
      Focus on identifying declarative sentences that convey factual information.
      Be sure to replace pronouns with their antecedents.

      Your response should be a numbered list with each item on a new line. 
      For example: 

      1. foo
      2. bar
      3. baz

    human: |
      {text}

triplet_extraction:
  type: extraction
  parser: TripletParser
  prompts:
    system: |
      You are a sentence parsing agent helping to construct a knowledge graph.

      Extract a list of knowledge graph triplets from the text. 
      Replace any pronouns with their antecedents as you execute the task.

      A triplet comprises:
      - a subject (the main entity mentioned) 
      - the predicate (the relationship or attribute) 
      - an object (another entity or value associated with the subject)

      Your response should be an enumerated list of triplets. Example:

      1. Socrates::is::mortal
      2. molecules::comprise::atoms
      3. infections::caused by::germs
    
    human: |
      {text}